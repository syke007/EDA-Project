1. Definição de uma estrutura de dados dinâmica para a representação de um job com um conjunto finito de n
operações;
2. Armazenamento/leitura de ficheiro de texto com representação de um job; 
3. Inserção de uma nova operação;
4. Remoção de uma determinada operação;
5. Alteração de uma determinada operação;
6. Determinação da quantidade mínima de unidades de tempo necessárias para completar o job e listagem das
respetivas operações;
7. Determinação da quantidade máxima de unidades de tempo necessárias para completar o job e listagem das
respetivas operações;
8. Determinação da quantidade média de unidades de tempo necessárias para completar uma operação,
considerando todas as alternativas possíveis;

----------------------------------------------------------------------------------------------------------------

1. Definição de uma estrutura de dados dinâmica para representação de um conjunto finito de m jobs
associando a cada job um determinando conjunto finito de operações;
2. Armazenamento/leitura de ficheiro de texto com representação de um process plan (considerar
obrigatoriamente para efeito de teste o process plan da Tabela 1);
3. Inserção de um novo job;
4. Remoção de um job;
5. Inserção de uma nova operação num job;
6. Remoção de uma determinada operação de um job;
7. Edição das operações associadas a um job;
8. Cálculo de uma proposta de escalonamento para o problema FJSSP (obrigatoriamente limitado a um tempo
máximo de processamento configurável), apresentando a distribuição das operações pelas várias máquinas,
minimizando o makespan (unidades de tempo necessárias para a realização de todos os jobs). A proposta
de escalonamento deverá ser exportada para um ficheiro de texto possibilitando uma interpretação intuitiva
(utilizar por exemplo um formato tabular ou representação gráfica html, ou outra);
9. Representação de diferentes process plan (variando a quantidade de máquinas disponíveis, quantidade de
job, e sequência de operações, etc) associando as respetivas propostas de escalonamento.